{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","placeholder","defaultProps","about","TextForm","useState","txt","settxt","textHeader","value","onChange","event","target","rows","style","background","color","toUpperCase","showAlert","toLowerCase","text","split","join","newText","charAt","slice","document","getElementById","select","navigator","clipboard","writeText","Math","trunc","length","Alert","alert","msg","App","setmode","setalert","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d268d084.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = (props) => {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li>\r\n            */}\r\n          </ul>\r\n\r\n          <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label mx-1 text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'light':'dark'} Mode </label>\r\n          </div>\r\n\r\n          {/* <div className=\"form-check form-switch\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n            <label className={`form-check-label mx-1 text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'light':'dark'} Mode </label>\r\n          </div> */}\r\n\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"PropTypes.string\",\r\n  about: \"PropTypes.string2\",\r\n}","import React , {useState} from 'react'\r\n\r\nexport const TextForm = (props) => {\r\n  \r\n  const handleClickUp = (event)=>{\r\n    settxt(txt.toUpperCase())\r\n    props.showAlert(\"Success\",\"UpperCase\")\r\n  }\r\n  \r\n  const handleClickDown = (event)=>{\r\n    settxt(txt.toLowerCase())\r\n    props.showAlert(\"Success\",\"LowerCase\")\r\n  }\r\n\r\n  const handleCopy = (event)=>{\r\n    let text = document.getElementById(\"mybox\");\r\n    text.select()\r\n    navigator.clipboard.writeText(text.value)\r\n    props.showAlert(\"Success\",\"Text is copied to your clipboard\")\r\n  }\r\n\r\n  const handleExtraSpace = (event)=>{\r\n    let text = txt.split(/[ ]+/);\r\n    settxt(text.join(\" \"))\r\n    props.showAlert(\"Success\",\"ExtraSpace removed\")\r\n    \r\n  }\r\n  \r\n  const capitalize = () => {\r\n        \r\n    let firstchar = txt.charAt(0); // storing the first char of the string\r\n    let newText= firstchar.toUpperCase(); // converting that to uppercase\r\n    settxt(newText+txt.toLowerCase().slice(1)); // printing it with rest excluding the first char by using slice\r\n    props.showAlert(\"Success\",\"Captilize\")\r\n  } \r\n\r\n  const handleClear = () => {\r\n   settxt(\"\");\r\n   props.showAlert(\"Success\",\"Why you clear all text\")\r\n  } \r\n\r\n\r\n  const handleOnChange = (event)=>{\r\n    settxt(event.target.value)\r\n  }\r\n  const [txt, settxt] = useState(\"Enter your text here\")\r\n  \r\n  return (<>\r\n  \r\n\r\n    \r\n    <div className=\"container\">\r\n      <div className=\"mb-3 my-3\">\r\n\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label \"><b>{props.textHeader}</b></label>\r\n\r\n        <textarea className=\"form-control\" id=\"mybox\" value={txt} onChange={handleOnChange} rows=\"8\" style={{background: props.mode==='dark'?'#202124':'white',color: props.mode==='dark'?'white':'black'}}></textarea>\r\n\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'dark'} my-3 mx-1`} onClick={handleClickUp}>UpperCase</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'dark'} my-3 mx-1`} onClick={handleClickDown}>LowerCase</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'dark'} my-3 mx-1`} onClick={handleExtraSpace}>Remove Extra Space</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'dark'} my-3 mx-1`} onClick={capitalize}>Capitalize</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'dark'} my-3 mx-1`} onClick={handleCopy}>Copy</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'light':'dark'} my-3 mx-1`} onClick={handleClear}>Clear</button>\r\n        {/* <button className=\"btn btn-primary my-3 mx-1\" onClick={handleClicklinrev}>LineRemover</button> */}\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"container\">\r\n      <h1>Your Text Summary Here</h1>\r\n      <p>word {Math.trunc(txt.length/5)} Character {txt.length}</p>\r\n      <p>{0.08*Math.trunc(txt.length/5)} Minute to Read</p>\r\n      <h2>Text Preview</h2>\r\n      <p><pre>{txt.length>0?txt:\"Write text above box for preview\"}</pre></p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.mode==='dark'?\"primary\":\"danger\"} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport {Navbar} from \"./components/Navbar\"\nimport {TextForm} from \"./components/TextForm\"\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  \n  const [alert, setalert] = useState(null)\n\n  const showAlert = (type,msg)=>{\n      setalert({\n        type:type,\n        msg:msg\n      }\n      )\n      setTimeout(() => {\n          setalert(null\n          )\n      }, 1500);\n    }\n  \n  let toggleMode = ()=>{\n    if (mode==='light'){\n      setmode('dark')\n      document.body.style.backgroundColor = \"#313236\"\n      document.body.style.color = \"white\"\n      showAlert(\"Success\",\"Dark Mode Enabled\")\n      document.title=\"Dark Mode Enabled\"\n      // setInterval(() => {\n      //   document.title=\"Dark Mode Enabled\"\n      // }, 200);\n      // setInterval(() => {\n      //   document.title=\"Daark Mode Enabled\"\n      // }, 150);\n    }\n    else{\n      setmode('light')\n      document.body.style.color = \"black\"\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Success\",\"Light Mode Enabled\")\n      document.title=\"Light Mode Enabled\"\n    }\n  }\n\n  return (<>\n    <Navbar title=\"TextUtils\" about=\"About us\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert} mode={mode}/>\n    \n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm textHeader=\"TextUtilis App\" showAlert={showAlert} mode={mode}/>\n          {/* </Route>\n      </Switch> */}\n\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}